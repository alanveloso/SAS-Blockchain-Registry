#!/bin/bash

echo "üß™ Teste B√°sico da API SAS Shared Registry (Sem Blockchain)"
echo "=========================================================="
echo ""

# Verificar se jq est√° instalado
if ! command -v jq &> /dev/null; then
    echo "‚ùå jq n√£o est√° instalado. Instalando..."
    sudo apt-get update && sudo apt-get install -y jq
fi

# Fun√ß√£o para aguardar um pouco entre requests
wait_a_bit() {
    echo "‚è≥ Aguardando 2 segundos..."
    sleep 2
}

# 1. Health Check
echo "1Ô∏è‚É£ Health Check"
echo "---------------"
curl -s http://localhost:9000/health | jq '.'
echo ""

wait_a_bit

# 2. Endpoint raiz
echo "2Ô∏è‚É£ Endpoint raiz"
echo "----------------"
curl -s http://localhost:9000/ | jq '.'
echo ""

wait_a_bit

# 3. Ver estat√≠sticas
echo "3Ô∏è‚É£ Ver estat√≠sticas"
echo "-------------------"
curl -s http://localhost:9000/stats | jq '.'
echo ""

wait_a_bit

# 4. Ver eventos recentes
echo "4Ô∏è‚É£ Ver eventos recentes"
echo "----------------------"
curl -s http://localhost:9000/events/recent | jq '.'
echo ""

wait_a_bit

# 5. Verificar SAS n√£o autorizado
echo "5Ô∏è‚É£ Verificar SAS n√£o autorizado"
echo "-------------------------------"
curl -s http://localhost:9000/sas/0x1234567890123456789012345678901234567890/authorized | jq '.'
echo ""

echo "‚úÖ Teste b√°sico conclu√≠do!"
echo ""
echo "üìã Resultado:"
echo "   - ‚úÖ Endpoints que funcionam sem blockchain testados"
echo "   - ‚ö†Ô∏è  Endpoints que precisam de blockchain foram pulados"
echo ""
echo "üöÄ Para testar com blockchain:"
echo "   1. Iniciar Hardhat: npx hardhat node"
echo "   2. Deploy contrato: npx hardhat run scripts/deploy-sas-shared-registry.js --network localhost"
echo "   3. Atualizar .env com endere√ßo do contrato"
echo "   4. Reiniciar API: python3 run.py"
echo "   5. Executar teste completo: ./scripts/test_sas_sas.sh"
echo ""
echo "üìö Documenta√ß√£o dispon√≠vel em:"
echo "   - docs/API_DOCS.md"
echo "   - README.md" 